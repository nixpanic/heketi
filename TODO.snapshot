# Current Status

Client-side API and CLI for VolumeClone have been posted for review (PR#1111).


## TODO

- rebase on PR#1111

- split VolumeClone functionality from Snapshot patches as much as possible
  - send VolumeClone changes as a PR before adding the advanced snapshot API
  - once VolumeClone is accepted, send the advanced snapshot API

- some (all?) 'gluster snapshot' commands might fail, but still return success
  - in executors/cmdexec/snapshot.go add check cliOutput.OpErr for errors

- create apps/glusterfs/snapshot_entry.go
  - snapshot entry data type
  - operations

- create snapshot operations in apps/glusterfs/operations.go
  (SnapshotCreate, ....).Build/Exec/ etc
  - SnapshotClone() should call executor.SnapshotCloneVolume() or executor.SnapshotCloneBlockVolume()

- implement API handling in apps/glusterfs/app_snapshot.go

- client needs to call to service in client/cli/go/cmds/snapshot.go

- ideas for test-cases:
  - create a clone of a clone (should work)
  - clone wit --name=.. 2x with the same --name=.. (should fail)

- list all `TODO` comments and address them

## DONE

- pkg/glusterfs/api/types.go snapshot / clone extensions
  - snapshot entry / info
  - requests

- cli: use "volume snapshot <cmd>" instead of "volume snapshot-<cmd>"
  - **now**: "volume snapshot", "volume clone" and "snapshot .."

- create executor/cmdexec/snapshot.go

- executor.cmdexec.VolumeClone() creates a snapshot, clones it and deletes the snapshot

- implement API handling in apps/glusterfs/app_volume.go
